name: continuous-integration
on:
  push:
    paths:
      - 'Code/*'
      - 'Vendors/*'

jobs:
  build-win:
    name: Build Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1

      - name: Configure the build system
        run: ./premake.sh.bat

      - name: Run build on windows
        run: 'cd Build && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat" && msbuild Oakwood.sln /p:Configuration="Production" /p:PlatformToolset="v142"'

      - uses: ./.github/actions/discord-notification
        if: always()
        with:
          platform: windows
          succeeded: success()
        env:
          DISCORD_WEBHOOK_CHANNEL: ${{ secrets.DISCORD_WEBHOOK_CHANNEL }}
          DISCORD_WEBHOOK_TOKEN: ${{ secrets.DISCORD_WEBHOOK_TOKEN }}

  build-lin:
    name: Build Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Install deps
        run: sudo apt install -y libnanomsg-dev

      - name: Configure the build system
        run: ./premake.sh.bat

      - name: Run build
        run: cd Build && make

      - uses: ./.github/actions/discord-notification
        if: always()
        with:
          platform: linux
          succeeded: success()
        env:
          DISCORD_WEBHOOK_CHANNEL: ${{ secrets.DISCORD_WEBHOOK_CHANNEL }}
          DISCORD_WEBHOOK_TOKEN: ${{ secrets.DISCORD_WEBHOOK_TOKEN }}

  build-mac:
    name: Build macOS
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: '10.x'

      - name: Install deps
        run: brew install nanomsg

      - name: Configure the build system
        run: ./premake.sh.bat

      - name: Run build
        run: cd Build && make

      - uses: ./.github/actions/discord-notification
        if: always()
        with:
          platform: macos
          succeeded: success()
        env:
          DISCORD_WEBHOOK_CHANNEL: ${{ secrets.DISCORD_WEBHOOK_CHANNEL }}
          DISCORD_WEBHOOK_TOKEN: ${{ secrets.DISCORD_WEBHOOK_TOKEN }}
